name: Pull-Request Auto-Deploy

on:
  push:
    branches:
      - "auto-*"

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-pr-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Derive branch name
        id: ctx
        run: echo "branch=$GITHUB_REF_NAME" >> "$GITHUB_OUTPUT"

      - name: Create or reuse PR -> main (author = github-actions[bot])
        id: pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          branch="${{ steps.ctx.outputs.branch }}"
          found=$(gh pr list --head "$branch" --base main --state open --json number,url -q '.[0]')
          if [[ -n "$found" ]]; then
            pr=$(echo "$found" | jq -r .number)
            url=$(echo "$found" | jq -r .url)
            echo "Reusing PR #$pr ($url)"
          else
            j=$(gh pr create \
              --title "[AUTO] PR from $branch to main" \
              --body  "Auto-generated from \`$branch\` to \`main\`." \
              --base main --head "$branch" \
              --json number,url)
            pr=$(echo "$j" | jq -r .number)
            url=$(echo "$j" | jq -r .url)
            echo "Created PR #$pr ($url)"
          fi
          echo "number=$pr" >> "$GITHUB_OUTPUT"

      - name: Ensure BOT_PAT exists (fail if missing)
        env:
          BOT_PAT: ${{ secrets.BOT_PAT }}
        run: |
          if [ -z "$BOT_PAT" ]; then
            echo "::error::Missing BOT_PAT secret. Create a PAT with Pull requests: R/W and Contents: R/W, then add it as repo secret BOT_PAT."
            exit 1
          fi

      - name: Approve PR (bot review)
        env:
          GH_TOKEN: ${{ secrets.BOT_PAT }}
        run: gh pr review ${{ steps.pr.outputs.number }} --approve

      - name: Enable Auto-merge (merges when requirements satisfied)
        env:
          GH_TOKEN: ${{ secrets.BOT_PAT }}
        run: |
          # If your repo requires linear history, change to --squash or --rebase
          gh pr merge ${{ steps.pr.outputs.number }} --auto --merge --delete-branch
