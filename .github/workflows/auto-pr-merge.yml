name: Auto PR + Approve + Auto-merge (simple)

on:
  push:
    branches: [ "auto-*" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto_pr_and_merge:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Set branch name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Create or reuse PR (skip if none)
        id: create
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          API="https://api.github.com/repos/${{ github.repository }}"
          CREATE=$(curl -s -w "\n%{http_code}\n" -X POST \
            -H "Authorization: token $TOKEN" -H "Accept: application/vnd.github+json" \
            "$API/pulls" \
            -d "{\"title\":\"[AUTO] $BRANCH_NAME → main\",\"head\":\"$BRANCH_NAME\",\"base\":\"main\",\"body\":\"Auto-generated from '$BRANCH_NAME' to main.\"}")
          BODY=$(echo "$CREATE" | sed '$d'); CODE=$(echo "$CREATE" | tail -n1)

          if [ "$CODE" = "201" ]; then
            echo "pr=$(echo "$BODY" | jq -r .number)" >> "$GITHUB_OUTPUT"
            echo "has_pr=true" >> "$GITHUB_OUTPUT"
            echo "✅ Created PR"
            exit 0
          fi

          PR_NUMBER=$(curl -s -H "Authorization: token $TOKEN" -H "Accept: application/vnd.github+json" \
            "$API/pulls?state=open&head=${{ github.repository_owner }}:$BRANCH_NAME&base=main" \
            | jq -r '.[0].number')

          if [ -n "$PR_NUMBER" ] && [ "$PR_NUMBER" != "null" ]; then
            echo "pr=$PR_NUMBER" >> "$GITHUB_OUTPUT"
            echo "has_pr=true" >> "$GITHUB_OUTPUT"
            echo "🔁 Reusing PR #$PR_NUMBER"
            exit 0
          fi

          STATUS=$(curl -s -H "Authorization: token $TOKEN" -H "Accept: application/vnd.github+json" \
            "$API/compare/main...$BRANCH_NAME" | jq -r .status)
          if [ "$STATUS" = "identical" ] || [ "$STATUS" = "behind" ]; then
            echo "ℹ️ No new commits ahead of main; skipping PR."
            echo "has_pr=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "::warning::PR creation failed (HTTP $CODE), skipping."
          echo "has_pr=false" >> "$GITHUB_OUTPUT"
          exit 0

      - name: Approve PR
        if: steps.create.outputs.has_pr == 'true'
        env:
          GH_TOKEN: ${{ secrets.BOT_PAT }}
        run: gh pr review ${{ steps.create.outputs.pr }} --repo "${{ github.repository }}" --approve

      - name: Enable Auto-merge
        if: steps.create.outputs.has_pr == 'true'
        env:
          GH_TOKEN: ${{ secrets.BOT_PAT }}
        run: gh pr merge ${{ steps.create.outputs.pr }} --repo "${{ github.repository }}" --auto --squash --delete-branch

      - name: Done
        run: echo "🎉 Workflow finished successfully."
