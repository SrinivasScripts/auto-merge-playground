name: Pull-Request Auto-Deploy

on:
  push:
    branches:
      - "auto-*"

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set branch name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      # Create or reuse a PR
      - name: Create or reuse PR
        id: create_pr
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          API="https://api.github.com/repos/${{ github.repository }}"
          # Try creating the PR
          RESP=$(curl -s -w "\n%{http_code}\n" -X POST \
            -H "Authorization: token $TOKEN" -H "Accept: application/vnd.github+json" \
            "$API/pulls" \
            -d "{\"title\":\"[AUTO] ${BRANCH_NAME} → main\",\"head\":\"${BRANCH_NAME}\",\"base\":\"main\",\"body\":\"Auto-generated from '${BRANCH_NAME}' to main.\"}")
          BODY=$(echo "$RESP" | sed '$d'); CODE=$(echo "$RESP" | tail -n1)

          if [ "$CODE" = "201" ]; then
            PR_NUMBER=$(echo "$BODY" | jq -r .number)
            echo "pr=$PR_NUMBER" >> "$GITHUB_OUTPUT"
            echo "has_pr=true" >> "$GITHUB_OUTPUT"
            echo "✅ Created PR #$PR_NUMBER"
            exit 0
          fi

          # Reuse existing open PR if it already exists
          PR_NUMBER=$(curl -s -H "Authorization: token $TOKEN" -H "Accept: application/vnd.github+json" \
            "$API/pulls?state=open&head=${{ github.repository_owner }}:${BRANCH_NAME}&base=main" \
            | jq -r '.[0].number')

          if [ -n "$PR_NUMBER" ] && [ "$PR_NUMBER" != "null" ]; then
            echo "pr=$PR_NUMBER" >> "$GITHUB_OUTPUT"
            echo "has_pr=true" >> "$GITHUB_OUTPUT"
            echo "🔁 Reusing PR #$PR_NUMBER"
            exit 0
          fi

          echo "ℹ️ No new PR needed."
          echo "has_pr=false" >> "$GITHUB_OUTPUT"
      - name: Approve PR
        if: steps.create_pr.outputs.has_pr == 'true'
        env:
          GH_TOKEN: ${{ secrets.BOT_PAT }}
        run: gh pr review ${{ steps.create_pr.outputs.pr }} --repo "${{ github.repository }}" --approve

      # Auto-merge only if a PR exists
      - name: Auto-merge PR
        if: steps.create_pr.outputs.has_pr == 'true'
        env:
          GH_TOKEN: ${{ secrets.BOT_PAT }}
        run: gh pr merge ${{ steps.create_pr.outputs.pr }} --repo "${{ github.repository }}" --auto --merge --delete-branch
